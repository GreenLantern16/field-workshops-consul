slug: service-discovery-with-consul
id: nyzxxfyzce4a
type: track
title: Service Discovery with Consul
teaser: Learn about Service Discovery with HashiCorp Consul
description: |
  Join us for an adventure of service discovery. In this track you'll learn how to connect a web application with its database using Consul. Topics covered include service registration, service discovery, automated config management, and seamless DNS integration.
icon: https://storage.googleapis.com/instruqt-frontend/assets/hashicorp/tracks/consul.png
tags: ['service discovery','health checks','dns','service registry','service catalog']
owner: hashicorp
developers:
- sean@hashicorp.com
- lance@hashicorp.com
private: true
published: true
challenges:
- slug: the-website-is-down
  id: lxxrrq17fcxz
  type: challenge
  title: "The website is DOWN! \U0001F631"
  teaser: |
    The company website is down and it's up to you to fix it. Use your Consul superpowers to find the database server and reconnect it to the app.
  assignment: |
    The website is DOWN! Your application server is not working correctly. You've determined that the app can't connect to the database.

    Edit the `wp-config.php` file in the App Config tab. On line 32 you'll find the configuration for the database server.

    Use the Consul UI to find the database server's IP and put it into the config file. Then on the App Server tab you can restart the application like so:

    ```
    service apache2 restart
    ```

    Verify that the application setup page is loading in the Website tab.
  notes:
  - type: text
    contents: "\U0001F578️ Entering the Consul Zone \U0001F47D"
  tabs:
  - title: Consul UI
    type: service
    hostname: consul-server-0
    port: 8500
  - title: App Config
    type: code
    hostname: app
    path: /var/www/html
  - title: App Server
    type: terminal
    hostname: app
  - title: Website
    type: service
    hostname: app
    port: 80
  difficulty: basic
  timelimit: 1800
- slug: automate-your-job
  id: m99lb94yn3ac
  type: challenge
  title: "Automate Your Job \U0001F916"
  teaser: Now that you have the website back up and running, it's time to automate
    this so you don't get woken up at 2 am again.
  assignment: |
    The IP address of the database server has changed again and you're tired of updating it manually.

    In this challenge you'll use consul-template to ensure that the application config always has the correct IP address.

    On the App Config tab you'll notice a new file called `wp-config.php.tpl`. This is a Consul Template config file. Consul template can update your `wp-config.php` file whenever the database IP address changes.

    Run the following commands on in the App Server terminal to activate Consul Template. Reload the `wp-config.php` file to see the updated IP address. The website should be loading again.

    ```
    cd /var/www/html

    consul-template -template "wp-config.php.tpl:wp-config.php"
    ```
  notes:
  - type: text
    contents: "\U0001F5A7 All Your Services Are Belong To Us \U0001F469‍\U0001F4BB"
  tabs:
  - title: Consul UI
    type: service
    hostname: consul-server-0
    port: 8500
  - title: App Config
    type: code
    hostname: app
    path: /var/www/html
  - title: App Server
    type: terminal
    hostname: app
  - title: Website
    type: service
    hostname: app
    port: 80
  difficulty: basic
  timelimit: 1800
- slug: seamless-service-discovery
  id: icwdlsw0pseb
  type: challenge
  title: "Seamless Service Discovery \U0001F5A7"
  teaser: Consul can provide seamless access to all nodes and services in the catalog,
    without rewriting your apps.
  assignment: |
    In this exercise you'll configure Consul to act as a local DNS server, providing seamless access to your service catalog via simple DNS hostnames.

    Edit the `wp-config.php` file again, but this time instead of using an IP address use the Consul DNS name for your database server node, `database.node.consul`.
  notes:
  - type: text
    contents: "\U0001F5A7 All Your Services Are Belong To Us \U0001F469‍\U0001F4BB"
  tabs:
  - title: Consul UI
    type: service
    hostname: consul-server-0
    port: 8500
  - title: App Config
    type: code
    hostname: app
    path: /var/www/html
  - title: App Server
    type: terminal
    hostname: app
  - title: Website
    type: service
    hostname: app
    port: 80
  difficulty: basic
  timelimit: 1800
checksum: "2139349991193313238"

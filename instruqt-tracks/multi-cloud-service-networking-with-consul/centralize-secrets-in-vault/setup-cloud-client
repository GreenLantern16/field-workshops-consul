#!/bin/sh

#ui access
vault_lb=$(terraform output -state /root/terraform/vault/terraform.tfstate aws_vault_ip)
echo "export VAULT_ADDR=http://${vault_lb}:8200" >> ~/.bashrc
cat << EOF > /etc/nginx/conf.d/vault.conf
server {
  listen 8200;
  location / {
    proxy_pass http://${vault_lb}:8200;
    proxy_set_header X-Real-IP \$remote_addr;
    proxy_redirect off;
  }
  access_log /var/log/nginx/vault.log;
}
EOF
service nginx restart

#init the Vault clusters
cd /root/terraform/vault
set-workdir /root/terraform/vault

AWS_VAULT_IP=$(terraform output -state /root/terraform/vault/terraform.tfstate aws_vault_ip)
AZURE_VAULT_IP=$(terraform output -state /root/terraform/vault/terraform.tfstate azure_vault_ip)
GCP_VAULT_IP=$(terraform output -state /root/terraform/vault/terraform.tfstate gcp_vault_ip)

#aws
export VAULT_ADDR=http://${AWS_VAULT_IP}:8200
vault operator init -recovery-shares=1 -recovery-threshold=1 -format=json | jq . > /root/aws_vault_keys.json

#azure
export VAULT_ADDR=http://${AZURE_VAULT_IP}:8200
vault operator init -recovery-shares=1 -recovery-threshold=1 -format=json | jq . > /root/azure_vault_keys.json

#gcp
export VAULT_ADDR=http://${GCP_VAULT_IP}:8200
vault operator init -recovery-shares=1 -recovery-threshold=1 -format=json | jq . > /root/gcp_vault_keys.json

#start performance replication on the AWS primary
export VAULT_ADDR=http://${AWS_VAULT_IP}:8200
export VAULT_TOKEN=$(cat /root/aws_vault_keys.json | jq -r .root_token)
vault write sys/replication/performance/primary/enable primary_cluster_addr="http://${AWS_VAULT_IP}:8201"
sleep 15

#generate the secondary tokens
GCP_REPLICATION_TOKEN=$(vault write /sys/replication/performance/primary/secondary-token id="gcp-us-central-1" -format=json | jq -r .wrap_info.token)
AZURE_REPLICATION_TOKEN=$(vault write /sys/replication/performance/primary/secondary-token id="azure-west-us-2" -format=json | jq -r .wrap_info.token)

#enable the performance secondaries

#azure
export VAULT_ADDR=http://${AZURE_VAULT_IP}:8200
export VAULT_TOKEN=$(cat /root/azure_vault_keys.json | jq -r .root_token)
vault write sys/replication/performance/secondary/enable token="${AZURE_REPLICATION_TOKEN}" primary_api_addr="http://${AWS_VAULT_IP}:8200"
sleep 15

#gcp
export VAULT_ADDR=http://${GCP_VAULT_IP}:8200
export VAULT_TOKEN=$(cat /root/gcp_vault_keys.json | jq -r .root_token)
vault write sys/replication/performance/secondary/enable token="${GCP_REPLICATION_TOKEN}" primary_api_addr="http://${AWS_VAULT_IP}:8200"
sleep 15

#create an admin user
export VAULT_ADDR=http://${AWS_VAULT_IP}:8200
export VAULT_TOKEN=$(cat /root/aws_vault_keys.json | jq -r .root_token)

echo 'path "*"
{
  capabilities = ["create", "read", "update", "delete", "list", "sudo"]
}' | vault policy write admin -


vault auth enable userpass
vault write auth/userpass/users/admin \
    password=admin \
    policies=admin
vault secrets enable transit
vault write -f transit/keys/payments

exit 0

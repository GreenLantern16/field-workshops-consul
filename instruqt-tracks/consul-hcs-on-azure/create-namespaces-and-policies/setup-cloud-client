#!/bin/bash

mkdir /root/policies
set-workdir /root/policies

#namespace sd
cat << EOF > /root/policies/cross-namespace.hcl
namespace_prefix "" {
  service_prefix "" {
    policy = "read"
  }
  node_prefix "" {
    policy = "read"
  }
}
EOF

cat << EOF > /root/policies/injector.hcl
operator = "read"
EOF

#frontend team
cat << EOF > /root/policies/frontend-namespace.hcl
Name = "frontend"
Description = "namespace for frontend team"
ACLs {
  PolicyDefaults = [
    {
      Name = "cross-namespace-policy"
    }
  ]
  RoleDefaults = []
}
EOF

cat << EOF > /root/policies/frontend-team-agent.hcl
node_prefix "aks-" {
  policy = "write"
}
service_prefix "" {
  policy = "read"
}
EOF

cat << EOF > /root/policies/frontend-team-developer.hcl
namespace "frontend" {
  service_prefix "" {
    policy     = "read"
    intentions = "write"
  }
}

namespace_prefix "" {
  node_prefix "" {
    policy = "read"
  }
  service_prefix "" {
    policy = "read"
  }
  acl = "read"
}
EOF

#backend team
cat << EOF > /root/policies/backend-namespace.hcl
Name = "backend"
Description = "namespace for backend team"
ACLs {
  PolicyDefaults = [
    {
      Name = "cross-namespace-policy"
    }
  ]
  RoleDefaults = []
}
EOF

cat << EOF > /root/policies/backend-team-agent.hcl
node_prefix "aks-" {
  policy = "write"
}
service_prefix "" {
  policy = "read"
}
EOF

cat << EOF > /root/policies/backend-team-developer.hcl
namespace "backend" {
  service_prefix "" {
    policy     = "read"
    intentions = "write"
  }
}

namespace_prefix "" {
  node_prefix "" {
    policy = "read"
  }
  service_prefix "" {
    policy = "read"
  }
  acl = "read"
}
EOF

cat << EOF > /root/policies/payments.hcl
node "payments" {
  policy = "write"
}

agent "payments" {
  policy = "write"
}

key_prefix "_rexec" {
  policy = "write"
}

node_prefix "" {
	policy = "read"
}

namespace "backend" {
  service "payments" {
    policy = "write"
  }

  service "payments-sidecar-proxy" {
    policy = "write"
  }

  service_prefix "" {
    policy = "read"
  }
}
EOF

exit 0
